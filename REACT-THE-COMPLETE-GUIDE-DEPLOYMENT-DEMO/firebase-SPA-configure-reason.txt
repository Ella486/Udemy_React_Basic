< firebase에서 hosting 시 SPA 설정 유무 이유>
- 웹사이트를 배포할 때 SPA로 설정하기를 원하는지에 대한 질문이 있었고
우리는 yes라고 답 했다. 이것이 중요한 이유는?
- 배포한 웹사이트를 보면 여러 페이지 간에 이동이 가능한데 
즉, 라우트 간의 이동이 가능하다는 말이다.
이것은 리액트 프로젝트에 포함된 패키지인 리액트 라우터에서 제공하는 것이다.
URL을 확인하고 해당하는 컴포넌트를 불러온느 과정이 브라우저에서 실행된다.
react-router-dom 이라고 이름이 붙은 이유이다.
- 이 프로젝트는 서버에서 실행되는 코드가 없다. 이것이 중요한 이유는?
- 여기서 블로그를 클릭하면 블로그 컴포넌트로 넘어가는 로직이 서버가 아닌
브라우저에서 실행된다. 
하지만 링크를 클릭하는 것뿐만 아니라 도메인 뒤에 /posts를 추가한 URL을 입력해도
정상적으로 블로그 페이지로 넘어간다. 하지만 이렇게 작동하는 것이 당연한게 아니다.
- 왜냐하면 실제로 애플리케이션을 서버에 배포하고 사용자가 브라우저에 URL을 입력하면
기술적으로 브라우저는 서버에 요청을 보내기 때문이다.
- 주 도메인이 아니라 /posts 등 기타 웹사이트의 경로를 추가해 요청을 보냈다면
요청에 따라 해당하는 경로가 서버에 전달된다.
그리고 기본적으로 서버는 요청한 경로에 해당하는 응답을 찾기 위해 노력한다.
- 예를 들어 폴더 안에서 해당하는 이름의 라우트나 파일을 찾기 위해 노력하는데
당연히 서버 측에서 다양한 경로의 요청을 처리하는 로직이 없으므로 해당하는 파일을
찾는데 실패할 것이다.
- 서버는 해당하는 파일을 찾는 대신 언제나 동일한  HTML 파일과 자바스크립트 코드를 반환해
요청한 경로를 클라이언트 측에서 요청한 자바스크립트 코드인 리액트 앱의 라우터로 처리하도록
만들어야한다.
- 그러나, 서버는 기본적으로 항상 동일한 파일을 반환하지 않는다.

 => 기본적으로 서버는 폴더 내에서 요청에 해당하는 파일을 찾으려고 노력하고 
 따라서 이게 SPA로 설정할지 물어보는 이 질문이 있는 이유이다. 예라고 대답하면
 Firebase 서버에 어떠한 경로의 요청이 오건 index.html을 반환하도록 환경설정된다.
 (GitHub에 올릴 때는 파일을 지웠는데 firebase.json 파일을 보면 확인가능)
 URL 뒤에 어떤 경로가 붙건 Firebase는 언제나 index.html을 반환하고 
 결국 언제나 동일한 자바스크립트 파일을 요청하게 된다.
 즉, 서버 측 라우팅 대신 클라이언트 측 라우팅을 사용하도록 설정되는 것이다.

 => 다른 호스팅 제공자를 사용하면 SPA로 설정할지 물어보지 않을 수도 있기 때문에
 이를 알고 있어야한다. 그런 경우에는 모든 요청에 대해 index.html을 반환하도록 
 직접 리다이렉션 규칙을 설정해주어야 한다.
 
